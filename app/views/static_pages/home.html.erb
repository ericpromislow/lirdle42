<div>
  <h1><%= ApplicationHelper::APPNAME.capitalize  %></h1><br>
  <h2>
    This be the home page for <%= ApplicationHelper::APPNAME.capitalize  %>
  </h2>
  <%= render 'static_pages/waiting_users' %>
  <div class="modal fade" id="waiting-for-reply" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
          <h4 class="modal-title" id="modalLabel">Hang on...</h4>
        </div>
        <div class="modal-body">
          Waiting for a reply from <span id="waiting-for-reply-target"></span>
        </div>
        <div class="modal-footer">
          <button id="waiting-for-reply-cancel" type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        </div>
      </div>
    </div>
  </div>

  <div class="modal fade" id="got-an-invitation" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
          <h4 class="modal-title" id="modalLabel">Hey</h4>
        </div>
        <div class="modal-body">
          <span id="got-an-invitation-sender"></span> would like to play a game of Lirdle!
        </div>
        <div class="modal-footer">
          <%#= form_with(id: "accept-invitation", model: Invitation.last, remote: true) do |f| %>
            <%#= f.button("Let's play!", class: "btn btn-secondary", remote: "true") %>
            <%#= f.button("Cancel",      class: "btn btn-secondary", remote: "true") %>
          <%# end %>
          <button id="got-an-invitation-ok" type="button" class="btn btn-secondary" data-dismiss="modal">OK</button>
          <button id="got-an-invitation-cancel" type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        </div>
      </div>
    </div>
  </div>

  <div class="modal fade" id="waiting-for-reply-timeout" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h4 class="modal-title" id="modalLabel">Timed out</h4>
        </div>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
  $(document).ready(() => {
    <% if @globalInvitationMessage && @globalInvitationMessage[:type] == 'invitation' %>
    const globalInvitationMessage = "<%= JSON.dump(@globalInvitationMessage) %>";
    const inviteID = <%= @globalInvitationMessage[:message][:id] %>;
    const toID = <%= @globalInvitationMessage[:message][:to] %>;
    const fromID = <%= @globalInvitationMessage[:message][:from] %>;
    const myID = <%= @user.id %>;
    const messageIsToInvitee = myID === toID;
    let modal = null;
    if (messageIsToInvitee) {
      document.querySelector('#got-an-invitation #got-an-invitation-sender').textContent = '<%= @globalInvitationMessage[:message][:fromUsername]  %>';
      modal = $('#got-an-invitation');
    } else {
      document.querySelector('#waiting-for-reply #waiting-for-reply-target').textContent = '<%= @globalInvitationMessage[:message][:toUsername] %>';
      modal = $('#waiting-for-reply');
    }
    if (!modal) {
      console.log(`Awp: Can't find modal #got-an-invitation`);
      return;
    }
    modal.modal();

    if (messageIsToInvitee) {
      $("#got-an-invitation-ok").click(async () => {
        // Chrome clears the console on location.href change, so don't write too much there at this point
        // console.log(`QQQ: Handling got-an-invitation-ok: Recipient clicked OK!`);
        // console.log(`QQQ: global-message: `, globalInvitationMessage)
        $.post('/games.json', {playerA: fromID, playerB: myID})
          .done((data) => {
            // console.log(`QQQ: post games => ${ data }`, data);
            console.table(data);
            // alert(`QQQ: post games => ${ JSON.stringify(data) }`);
            const url = `/invitations/${inviteID}?originator=${fromID}&reason=accepted&game_id=${data.location.id}`;
            // alert(`QQQ: post games => game_id=${ data.location.id }, url: ${ url }`);
            $.ajax({
              url,
              type: 'DELETE',
              success: (result) => {
                // console.log(`QQQ: delete worked? ${ result }`);
              }
            });
            // console.log(`QQQ: - setting location.href...`);
            window.location.href = `/games/${data.location.id}`;
            // console.log(`QQQ: + setting location.href...`);
          });
      });

      $("#got-an-invitation-cancel").click(async () => {
        // console.log(`QQQ: Recipient clicked Cancel!`);
        fetch(`/invitations/${inviteID}?originator=${myID}&reason=declined`, {
          mode: 'cors', cache: 'no-cache',
          credentials: "same-origin", // include, *same-origin, omit
          method: 'PATCH'
        });
      });
    } else {
      $("#waiting-for-reply-cancel").click(async () => {
        // console.log(`QQQ: Sender clicked cancel, globalMessage: #{ globalMessage }`);
        fetch(`/invitations/${inviteID}?from=${myID}&flash=cancelled`, {
          mode: 'cors', cache: 'no-cache',
          credentials: "same-origin", // include, *same-origin, omit
          method: 'DELETE'
        });
      });
    }
    <%#
       @globalInvitationMessage = { chatroom: 'main', type: 'invitation',
          message: { id: inv.id, from: inv.from, to: inv.to,
            toUsername: user.username,
            fromUsername: User.find(inv.from).username,
          } }
     %>
    <% end %>
  });
</script>
